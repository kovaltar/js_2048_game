{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_class_private_field_get.js","node_modules/@swc/helpers/esm/_class_apply_descriptor_get.js","node_modules/@swc/helpers/esm/_class_extract_field_descriptor.js","node_modules/@swc/helpers/esm/_class_private_field_init.js","node_modules/@swc/helpers/esm/_check_private_redeclaration.js","node_modules/@swc/helpers/esm/_class_private_field_set.js","node_modules/@swc/helpers/esm/_class_apply_descriptor_set.js","node_modules/@swc/helpers/esm/_class_private_method_get.js","node_modules/@swc/helpers/esm/_class_private_method_init.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $ac3905202f0710b7$export$71511d61b312f219(receiver, descriptor) {\n    if (descriptor.get) return descriptor.get.call(receiver);\n    return descriptor.value;\n}\n\n\nfunction $753de3cb5925592a$export$71511d61b312f219(receiver, privateMap, action) {\n    if (!privateMap.has(receiver)) throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n    return privateMap.get(receiver);\n}\n\n\nfunction $2f97c2a4ea6269f4$export$71511d61b312f219(receiver, privateMap) {\n    var descriptor = (0, $753de3cb5925592a$export$71511d61b312f219)(receiver, privateMap, \"get\");\n    return (0, $ac3905202f0710b7$export$71511d61b312f219)(receiver, descriptor);\n}\n\n\nfunction $f86983e96b0c893e$export$71511d61b312f219(obj, privateCollection) {\n    if (privateCollection.has(obj)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\n\n\nfunction $5d6c3530fa14a187$export$71511d61b312f219(obj, privateMap, value) {\n    (0, $f86983e96b0c893e$export$71511d61b312f219)(obj, privateMap);\n    privateMap.set(obj, value);\n}\n\n\nfunction $a91e4d47d6e0e68a$export$71511d61b312f219(receiver, descriptor, value) {\n    if (descriptor.set) descriptor.set.call(receiver, value);\n    else {\n        if (!descriptor.writable) // This should only throw in strict mode, but class bodies are\n        // always strict and private fields can only be used inside\n        // class bodies.\n        throw new TypeError(\"attempted to set read only private field\");\n        descriptor.value = value;\n    }\n}\n\n\n\nfunction $20d5c04b0c6865c9$export$71511d61b312f219(receiver, privateMap, value) {\n    var descriptor = (0, $753de3cb5925592a$export$71511d61b312f219)(receiver, privateMap, \"set\");\n    (0, $a91e4d47d6e0e68a$export$71511d61b312f219)(receiver, descriptor, value);\n    return value;\n}\n\n\nfunction $ac6739cbe5bf1c84$export$71511d61b312f219(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) throw new TypeError(\"attempted to get private field on non-instance\");\n    return fn;\n}\n\n\n\nfunction $ea91727f98d0802f$export$71511d61b312f219(obj, privateSet) {\n    (0, $f86983e96b0c893e$export$71511d61b312f219)(obj, privateSet);\n    privateSet.add(obj);\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */ $3d28d7f1aac198f5$var$_gameStatus = /*#__PURE__*/ new WeakMap(), $3d28d7f1aac198f5$var$_movingIndikator = /*#__PURE__*/ new WeakMap(), $3d28d7f1aac198f5$var$_score = /*#__PURE__*/ new WeakMap(), // Add your own methods here\n$3d28d7f1aac198f5$var$_getFlatEmptyIndexes = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_chooseEmptyRandCoords = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_setValue = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_groupCells = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_getColumn = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_mergeForward = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_mergeBackward = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_isArraysEqual = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_getMaxValue = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_isMovePossible = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_hasEqualPair = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_updateStatus = /*#__PURE__*/ new WeakSet();\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game(initialState) {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_getFlatEmptyIndexes);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_chooseEmptyRandCoords);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_setValue);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_groupCells);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_getColumn);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_mergeForward);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_mergeBackward);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_isArraysEqual);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_getMaxValue);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_isMovePossible);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_hasEqualPair);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_updateStatus);\n        (0, $5d6c3530fa14a187$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_gameStatus, {\n            writable: true,\n            value: \"idle\"\n        });\n        (0, $5d6c3530fa14a187$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_movingIndikator, {\n            writable: true,\n            value: []\n        });\n        (0, $5d6c3530fa14a187$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_score, {\n            writable: true,\n            value: 0\n        });\n        // eslint-disable-next-line no-console\n        this.initialState = initialState || [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        this.state = JSON.parse(JSON.stringify(this.initialState));\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                for(var i = 0; i < this.state.length; i++){\n                    var curRow = this.state[i];\n                    var arr = (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_mergeBackward, $3d28d7f1aac198f5$var$mergeBackward).call(this, (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_groupCells, $3d28d7f1aac198f5$var$groupCells).call(this, curRow));\n                    var currentMove = false;\n                    currentMove = !(0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_isArraysEqual, $3d28d7f1aac198f5$var$isArraysEqual).call(this, curRow, arr);\n                    (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_movingIndikator).push(currentMove);\n                    if (currentMove) for(var j = 0; j < arr.length; j++)curRow[j] = arr[j];\n                }\n                if ((0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_movingIndikator).includes(true)) {\n                    (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_setValue, $3d28d7f1aac198f5$var$setValue).call(this, this.state);\n                    (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_movingIndikator).length = 0;\n                }\n                (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_updateStatus, $3d28d7f1aac198f5$var$updateStatus).call(this);\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                for(var i = 0; i < this.state.length; i++){\n                    var curRow = this.state[i];\n                    var arr = (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_mergeForward, $3d28d7f1aac198f5$var$mergeForward).call(this, (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_groupCells, $3d28d7f1aac198f5$var$groupCells).call(this, curRow));\n                    var currentMove = false;\n                    currentMove = !(0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_isArraysEqual, $3d28d7f1aac198f5$var$isArraysEqual).call(this, curRow, arr);\n                    (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_movingIndikator).push(currentMove);\n                    if (currentMove) for(var j = 0; j < arr.length; j++)curRow[j] = arr[j];\n                }\n                if ((0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_movingIndikator).includes(true)) {\n                    (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_setValue, $3d28d7f1aac198f5$var$setValue).call(this, this.state);\n                    (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_movingIndikator).length = 0;\n                }\n                (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_updateStatus, $3d28d7f1aac198f5$var$updateStatus).call(this);\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                for(var i = 0; i < this.state.length; i++){\n                    var curColumn = (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_getColumn, $3d28d7f1aac198f5$var$getColumn).call(this, this.state, i);\n                    var arr = (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_mergeBackward, $3d28d7f1aac198f5$var$mergeBackward).call(this, (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_groupCells, $3d28d7f1aac198f5$var$groupCells).call(this, curColumn));\n                    var currentMove = false;\n                    currentMove = !(0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_isArraysEqual, $3d28d7f1aac198f5$var$isArraysEqual).call(this, curColumn, arr);\n                    (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_movingIndikator).push(currentMove);\n                    if (currentMove) for(var j = 0; j < arr.length; j++)this.state[j][i] = arr[j];\n                }\n                if ((0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_movingIndikator).includes(true)) {\n                    (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_setValue, $3d28d7f1aac198f5$var$setValue).call(this, this.state);\n                    (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_movingIndikator).length = 0;\n                }\n                (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_updateStatus, $3d28d7f1aac198f5$var$updateStatus).call(this);\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                for(var i = 0; i < this.state.length; i++){\n                    var curColumn = (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_getColumn, $3d28d7f1aac198f5$var$getColumn).call(this, this.state, i);\n                    var arr = (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_mergeForward, $3d28d7f1aac198f5$var$mergeForward).call(this, (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_groupCells, $3d28d7f1aac198f5$var$groupCells).call(this, curColumn));\n                    var currentMove = false;\n                    currentMove = !(0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_isArraysEqual, $3d28d7f1aac198f5$var$isArraysEqual).call(this, curColumn, arr);\n                    (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_movingIndikator).push(currentMove);\n                    if (currentMove) for(var j = 0; j < arr.length; j++)this.state[j][i] = arr[j];\n                }\n                if ((0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_movingIndikator).includes(true)) {\n                    (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_setValue, $3d28d7f1aac198f5$var$setValue).call(this, this.state);\n                    (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_movingIndikator).length = 0;\n                }\n                (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_updateStatus, $3d28d7f1aac198f5$var$updateStatus).call(this);\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_score);\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                return (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_gameStatus);\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_updateStatus, $3d28d7f1aac198f5$var$updateStatus).call(this);\n                (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_setValue, $3d28d7f1aac198f5$var$setValue).call(this, this.state);\n                (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_setValue, $3d28d7f1aac198f5$var$setValue).call(this, this.state);\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                (0, $20d5c04b0c6865c9$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_gameStatus, \"idle\");\n                this.state = JSON.parse(JSON.stringify(this.initialState));\n                (0, $20d5c04b0c6865c9$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_score, 0);\n            }\n        }\n    ]);\n    return Game;\n}();\nfunction $3d28d7f1aac198f5$var$getFlatEmptyIndexes(field) {\n    var result = [];\n    field.flat().forEach(function(item, ind, arr) {\n        if (item === 0) result.push(ind);\n    });\n    return result;\n}\nfunction $3d28d7f1aac198f5$var$chooseEmptyRandCoords(field) {\n    var emptyFlatIndexes = (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_getFlatEmptyIndexes, $3d28d7f1aac198f5$var$getFlatEmptyIndexes).call(this, field);\n    if (emptyFlatIndexes.length) {\n        var randInd = Math.floor(Math.random() * emptyFlatIndexes.length);\n        var randItem = emptyFlatIndexes[randInd];\n        return [\n            Math.floor(randItem / 4),\n            randItem % 4\n        ];\n    }\n}\nfunction $3d28d7f1aac198f5$var$setValue(field) {\n    (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_updateStatus, $3d28d7f1aac198f5$var$updateStatus).call(this);\n    if ((0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_gameStatus) === \"idle\" || (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_gameStatus) === \"playing\") {\n        var coords = (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_chooseEmptyRandCoords, $3d28d7f1aac198f5$var$chooseEmptyRandCoords).call(this, field);\n        var randNum = Math.floor(1 + Math.random() * 10);\n        if (randNum === 1) field[coords[0]][coords[1]] = 4;\n        else field[coords[0]][coords[1]] = 2;\n    }\n}\nfunction $3d28d7f1aac198f5$var$groupCells(array) {\n    return array.filter(function(item, ind, arr) {\n        return item !== 0;\n    });\n}\nfunction $3d28d7f1aac198f5$var$getColumn(rowsArr, columnInd) {\n    var column = [];\n    for(var i = 0; i < rowsArr.length; i++)column.push(rowsArr[i][columnInd]);\n    return column;\n}\nfunction $3d28d7f1aac198f5$var$mergeForward(array) {\n    var arr = array.concat();\n    var result = [];\n    for(var i = arr.length - 1; i >= 0; i--){\n        if (arr[i] === arr[i - 1]) {\n            arr[i] *= 2;\n            (0, $20d5c04b0c6865c9$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_score, (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_score) + arr[i]);\n            result.push(arr[i]);\n            arr.splice(arr.length - 2, 2);\n        } else result.push(arr.splice(i, 1)[0]);\n        i = arr.length;\n    }\n    if (result.length < 4) for(var j = result.length; j < 4; j++)result.push(0);\n    result.reverse();\n    return result;\n}\nfunction $3d28d7f1aac198f5$var$mergeBackward(array) {\n    var arr = array.concat();\n    var result = [];\n    for(var i = 0; i < arr.length; i++){\n        if (arr[i] === arr[i + 1]) {\n            arr[i] *= 2;\n            (0, $20d5c04b0c6865c9$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_score, (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_score) + arr[i]);\n            result.push(arr[i]);\n            arr.splice(0, i + 2);\n        } else result.push(arr.splice(0, 1)[0]);\n        i -= 1;\n    }\n    if (result.length < 4) for(var j = result.length; j < 4; j++)result.push(0);\n    return result;\n}\nfunction $3d28d7f1aac198f5$var$isArraysEqual(arr1, arr2) {\n    return arr1.length === arr2.length && arr1.every(function(value, index) {\n        return value === arr2[index];\n    });\n}\nfunction $3d28d7f1aac198f5$var$getMaxValue(field) {\n    var _Math;\n    return (_Math = Math).max.apply(_Math, (0, $227c6742e0ff6f82$export$71511d61b312f219)(field.flat()));\n}\nfunction $3d28d7f1aac198f5$var$isMovePossible(field) {\n    if (field.flat().includes(0)) return true;\n    for(var i = 0; i < field.length; i++){\n        var row = field[i];\n        var column = (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_getColumn, $3d28d7f1aac198f5$var$getColumn).call(this, field, i);\n        if ((0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_hasEqualPair, $3d28d7f1aac198f5$var$hasEqualPair).call(this, row) || (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_hasEqualPair, $3d28d7f1aac198f5$var$hasEqualPair).call(this, column)) return true;\n    }\n    return false;\n}\nfunction $3d28d7f1aac198f5$var$hasEqualPair(arr) {\n    return arr.some(function(item, index, array) {\n        return index !== 0 && item === arr[index - 1];\n    });\n}\nfunction $3d28d7f1aac198f5$var$updateStatus() {\n    if ((0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_isArraysEqual, $3d28d7f1aac198f5$var$isArraysEqual).call(this, this.initialState.flat(), this.state.flat()) && (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_isMovePossible, $3d28d7f1aac198f5$var$isMovePossible).call(this, this.state) && (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_getMaxValue, $3d28d7f1aac198f5$var$getMaxValue).call(this, this.state) < 2048) (0, $20d5c04b0c6865c9$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_gameStatus, \"idle\");\n    else if ((0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_getMaxValue, $3d28d7f1aac198f5$var$getMaxValue).call(this, this.state) >= 2048) (0, $20d5c04b0c6865c9$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_gameStatus, \"win\");\n    else if (!(0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_isMovePossible, $3d28d7f1aac198f5$var$isMovePossible).call(this, this.state) && (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_getMaxValue, $3d28d7f1aac198f5$var$getMaxValue).call(this, this.state) < 2048) (0, $20d5c04b0c6865c9$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_gameStatus, \"lose\");\n    else (0, $20d5c04b0c6865c9$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_gameStatus, \"playing\");\n    return (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_gameStatus);\n}\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\n// Write your code here\nvar $197cd56b15c33885$var$btnStart = document.querySelector(\".button.start\");\nvar $197cd56b15c33885$var$scoreCell = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$fieldCells = document.querySelectorAll(\".field-cell\");\n$197cd56b15c33885$var$render();\nfunction $197cd56b15c33885$var$gameStart() {\n    if (!$197cd56b15c33885$var$btnStart.classList.contains(\"restart\")) {\n        $197cd56b15c33885$var$game.start();\n        document.addEventListener(\"keydown\", $197cd56b15c33885$var$keyPush);\n        if ($197cd56b15c33885$var$game.getStatus() === \"playing\") {\n            $197cd56b15c33885$var$btnStart.classList.add(\"restart\");\n            $197cd56b15c33885$var$btnStart.innerHTML = \"Restart\";\n        }\n    } else {\n        document.removeEventListener(\"keydown\", $197cd56b15c33885$var$keyPush);\n        $197cd56b15c33885$var$btnStart.innerHTML = \"Start\";\n        $197cd56b15c33885$var$btnStart.classList.remove(\"restart\");\n        $197cd56b15c33885$var$game.restart();\n    }\n    $197cd56b15c33885$var$render();\n}\n$197cd56b15c33885$var$btnStart.addEventListener(\"click\", $197cd56b15c33885$var$gameStart);\nfunction $197cd56b15c33885$var$getClassNumber(element) {\n    var numbsArr = element.className.match(/(\\d+)/g);\n    if (numbsArr) return numbsArr[0];\n    return 0;\n}\nfunction $197cd56b15c33885$var$showMessage(message) {\n    var messages = document.querySelectorAll(\".message\");\n    for(var i = 0; i < messages.length; i++){\n        var curentMsg = messages[i];\n        if (curentMsg.classList.contains(\"message-\".concat(message))) {\n            if (curentMsg.classList.contains(\"hidden\")) curentMsg.classList.remove(\"hidden\");\n        } else if (!curentMsg.classList.contains(\"hidden\")) curentMsg.classList.add(\"hidden\");\n    }\n}\nfunction $197cd56b15c33885$var$render() {\n    for(var i = 0; i < $197cd56b15c33885$var$fieldCells.length; i++){\n        var fieldCell = $197cd56b15c33885$var$fieldCells[i];\n        var flatState = $197cd56b15c33885$var$game.getState().flat();\n        var flatStateValue = flatState[i];\n        if (flatStateValue !== +fieldCell.innerHTML) {\n            if (flatStateValue !== 0) fieldCell.innerHTML = String(flatStateValue);\n            else fieldCell.innerHTML = \"\";\n        }\n        if ($197cd56b15c33885$var$getClassNumber(fieldCell) !== fieldCell.innerHTML) {\n            fieldCell.classList.remove(\"field-cell--\".concat($197cd56b15c33885$var$getClassNumber(fieldCell)));\n            fieldCell.classList.add(\"field-cell--\".concat(flatStateValue));\n        }\n    }\n    $197cd56b15c33885$var$scoreCell.innerHTML = $197cd56b15c33885$var$game.getScore();\n    switch($197cd56b15c33885$var$game.getStatus()){\n        case \"win\":\n        case \"lose\":\n            $197cd56b15c33885$var$showMessage($197cd56b15c33885$var$game.getStatus());\n            break;\n        case \"idle\":\n            $197cd56b15c33885$var$showMessage(\"start\");\n            break;\n        case \"playing\":\n            $197cd56b15c33885$var$showMessage();\n            break;\n    }\n}\nfunction $197cd56b15c33885$var$keyPush(keyboardEvent) {\n    switch(keyboardEvent.key){\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n    }\n    $197cd56b15c33885$var$render();\n}\n\n})();\n//# sourceMappingURL=index.bedc8422.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\n// Write your code here\nconst btnStart = document.querySelector('.button.start');\nconst scoreCell = document.querySelector('.game-score');\nconst fieldCells = document.querySelectorAll('.field-cell');\n\nrender();\n\nfunction gameStart() {\n  if (!btnStart.classList.contains('restart')) {\n    game.start();\n    document.addEventListener('keydown', keyPush);\n\n    if (game.getStatus() === 'playing') {\n      btnStart.classList.add('restart');\n      btnStart.innerHTML = 'Restart';\n    }\n  } else {\n    document.removeEventListener('keydown', keyPush);\n    btnStart.innerHTML = 'Start';\n    btnStart.classList.remove('restart');\n    game.restart();\n  }\n  render();\n}\n\nbtnStart.addEventListener('click', gameStart);\n\nfunction getClassNumber(element) {\n  const numbsArr = element.className.match(/(\\d+)/g);\n\n  if (numbsArr) {\n    return numbsArr[0];\n  }\n\n  return 0;\n}\n\nfunction showMessage(message) {\n  const messages = document.querySelectorAll('.message');\n\n  for (let i = 0; i < messages.length; i++) {\n    const curentMsg = messages[i];\n\n    if (curentMsg.classList.contains(`message-${message}`)) {\n      if (curentMsg.classList.contains('hidden')) {\n        curentMsg.classList.remove('hidden');\n      }\n    } else {\n      if (!curentMsg.classList.contains('hidden')) {\n        curentMsg.classList.add('hidden');\n      }\n    }\n  }\n}\n\nfunction render() {\n  for (let i = 0; i < fieldCells.length; i++) {\n    const fieldCell = fieldCells[i];\n    const flatState = game.getState().flat();\n    const flatStateValue = flatState[i];\n\n    if (flatStateValue !== +fieldCell.innerHTML) {\n      if (flatStateValue !== 0) {\n        fieldCell.innerHTML = String(flatStateValue);\n      } else {\n        fieldCell.innerHTML = '';\n      }\n    }\n\n    if (getClassNumber(fieldCell) !== fieldCell.innerHTML) {\n      fieldCell.classList.remove(`field-cell--${getClassNumber(fieldCell)}`);\n      fieldCell.classList.add(`field-cell--${flatStateValue}`);\n    }\n  }\n  scoreCell.innerHTML = game.getScore();\n\n  switch (game.getStatus()) {\n    case 'win':\n    case 'lose':\n      showMessage(game.getStatus());\n      break;\n    case 'idle':\n      showMessage('start');\n      break;\n    case 'playing':\n      showMessage();\n      break;\n  }\n}\n\nfunction keyPush(keyboardEvent) {\n  switch (keyboardEvent.key) {\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n  }\n\n  render();\n}\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  #gameStatus = 'idle';\n  #movingIndikator = [];\n  #score = 0;\n\n  constructor(initialState) {\n    // eslint-disable-next-line no-console\n    this.initialState = initialState || [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    this.state = JSON.parse(JSON.stringify(this.initialState));\n  }\n\n  moveLeft() {\n    for (let i = 0; i < this.state.length; i++) {\n      const curRow = this.state[i];\n      const arr = this.#mergeBackward(this.#groupCells(curRow));\n      let currentMove = false;\n\n      currentMove = !this.#isArraysEqual(curRow, arr);\n      this.#movingIndikator.push(currentMove);\n\n      if (currentMove) {\n        for (let j = 0; j < arr.length; j++) {\n          curRow[j] = arr[j];\n        }\n      }\n    }\n\n    if (this.#movingIndikator.includes(true)) {\n      this.#setValue(this.state);\n      this.#movingIndikator.length = 0;\n    }\n\n    this.#updateStatus();\n  }\n\n  moveRight() {\n    for (let i = 0; i < this.state.length; i++) {\n      const curRow = this.state[i];\n      const arr = this.#mergeForward(this.#groupCells(curRow));\n      let currentMove = false;\n\n      currentMove = !this.#isArraysEqual(curRow, arr);\n      this.#movingIndikator.push(currentMove);\n\n      if (currentMove) {\n        for (let j = 0; j < arr.length; j++) {\n          curRow[j] = arr[j];\n        }\n      }\n    }\n\n    if (this.#movingIndikator.includes(true)) {\n      this.#setValue(this.state);\n      this.#movingIndikator.length = 0;\n    }\n\n    this.#updateStatus();\n  }\n\n  moveUp() {\n    for (let i = 0; i < this.state.length; i++) {\n      const curColumn = this.#getColumn(this.state, i);\n      const arr = this.#mergeBackward(this.#groupCells(curColumn));\n      let currentMove = false;\n\n      currentMove = !this.#isArraysEqual(curColumn, arr);\n      this.#movingIndikator.push(currentMove);\n\n      if (currentMove) {\n        for (let j = 0; j < arr.length; j++) {\n          this.state[j][i] = arr[j];\n        }\n      }\n    }\n\n    if (this.#movingIndikator.includes(true)) {\n      this.#setValue(this.state);\n      this.#movingIndikator.length = 0;\n    }\n\n    this.#updateStatus();\n  }\n\n  moveDown() {\n    for (let i = 0; i < this.state.length; i++) {\n      const curColumn = this.#getColumn(this.state, i);\n      const arr = this.#mergeForward(this.#groupCells(curColumn));\n      let currentMove = false;\n\n      currentMove = !this.#isArraysEqual(curColumn, arr);\n      this.#movingIndikator.push(currentMove);\n\n      if (currentMove) {\n        for (let j = 0; j < arr.length; j++) {\n          this.state[j][i] = arr[j];\n        }\n      }\n    }\n\n    if (this.#movingIndikator.includes(true)) {\n      this.#setValue(this.state);\n      this.#movingIndikator.length = 0;\n    }\n\n    this.#updateStatus();\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.#score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    return this.#gameStatus;\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    this.#updateStatus();\n    this.#setValue(this.state);\n    this.#setValue(this.state);\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    this.#gameStatus = 'idle';\n    this.state = JSON.parse(JSON.stringify(this.initialState));\n    this.#score = 0;\n  }\n\n  // Add your own methods here\n  #getFlatEmptyIndexes(field) {\n    const result = [];\n\n    field.flat().forEach((item, ind, arr) => {\n      if (item === 0) {\n        result.push(ind);\n      }\n    });\n\n    return result;\n  }\n\n  #chooseEmptyRandCoords(field) {\n    const emptyFlatIndexes = this.#getFlatEmptyIndexes(field);\n\n    if (emptyFlatIndexes.length) {\n      const randInd = Math.floor(Math.random() * emptyFlatIndexes.length);\n      const randItem = emptyFlatIndexes[randInd];\n\n      return [Math.floor(randItem / 4), randItem % 4];\n    }\n  }\n\n  #setValue(field) {\n    this.#updateStatus();\n\n    if (this.#gameStatus === 'idle' || this.#gameStatus === 'playing') {\n      const coords = this.#chooseEmptyRandCoords(field);\n      const randNum = Math.floor(1 + Math.random() * 10);\n\n      if (randNum === 1) {\n        field[coords[0]][coords[1]] = 4;\n      } else {\n        field[coords[0]][coords[1]] = 2;\n      }\n    }\n  }\n\n  #groupCells(array) {\n    return array.filter((item, ind, arr) => item !== 0);\n  }\n\n  #getColumn(rowsArr, columnInd) {\n    const column = [];\n\n    for (let i = 0; i < rowsArr.length; i++) {\n      column.push(rowsArr[i][columnInd]);\n    }\n\n    return column;\n  }\n\n  #mergeForward(array) {\n    const arr = array.concat();\n    const result = [];\n\n    for (let i = arr.length - 1; i >= 0; i--) {\n      if (arr[i] === arr[i - 1]) {\n        arr[i] *= 2;\n        this.#score += arr[i];\n        result.push(arr[i]);\n\n        arr.splice(arr.length - 2, 2);\n      } else {\n        result.push(arr.splice(i, 1)[0]);\n      }\n      i = arr.length;\n    }\n\n    if (result.length < 4) {\n      for (let j = result.length; j < 4; j++) {\n        result.push(0);\n      }\n    }\n\n    result.reverse();\n\n    return result;\n  }\n\n  #mergeBackward(array) {\n    const arr = array.concat();\n    const result = [];\n\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i] === arr[i + 1]) {\n        arr[i] *= 2;\n        this.#score += arr[i];\n        result.push(arr[i]);\n        arr.splice(0, i + 2);\n      } else {\n        result.push(arr.splice(0, 1)[0]);\n      }\n      i -= 1;\n    }\n\n    if (result.length < 4) {\n      for (let j = result.length; j < 4; j++) {\n        result.push(0);\n      }\n    }\n\n    return result;\n  }\n\n  #isArraysEqual(arr1, arr2) {\n    return (\n      arr1.length === arr2.length &&\n      arr1.every((value, index) => value === arr2[index])\n    );\n  }\n\n  #getMaxValue(field) {\n    return Math.max(...field.flat());\n  }\n\n  #isMovePossible(field) {\n    if (field.flat().includes(0)) {\n      return true;\n    }\n\n    for (let i = 0; i < field.length; i++) {\n      const row = field[i];\n      const column = this.#getColumn(field, i);\n\n      if (this.#hasEqualPair(row) || this.#hasEqualPair(column)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  #hasEqualPair(arr) {\n    return arr.some(\n      (item, index, array) => index !== 0 && item === arr[index - 1],\n    );\n  }\n\n  #updateStatus() {\n    if (\n      this.#isArraysEqual(this.initialState.flat(), this.state.flat()) &&\n      this.#isMovePossible(this.state) &&\n      this.#getMaxValue(this.state) < 2048\n    ) {\n      this.#gameStatus = 'idle';\n    } else if (this.#getMaxValue(this.state) >= 2048) {\n      this.#gameStatus = 'win';\n    } else if (\n      !this.#isMovePossible(this.state) &&\n      this.#getMaxValue(this.state) < 2048\n    ) {\n      this.#gameStatus = 'lose';\n    } else {\n      this.#gameStatus = 'playing';\n    }\n\n    return this.#gameStatus;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","import { _ as _class_apply_descriptor_get } from \"./_class_apply_descriptor_get.js\";\nimport { _ as _class_extract_field_descriptor } from \"./_class_extract_field_descriptor.js\";\n\nfunction _class_private_field_get(receiver, privateMap) {\n    var descriptor = _class_extract_field_descriptor(receiver, privateMap, \"get\");\n    return _class_apply_descriptor_get(receiver, descriptor);\n}\nexport { _class_private_field_get as _ };\n","function _class_apply_descriptor_get(receiver, descriptor) {\n    if (descriptor.get) return descriptor.get.call(receiver);\n\n    return descriptor.value;\n}\nexport { _class_apply_descriptor_get as _ };\n","function _class_extract_field_descriptor(receiver, privateMap, action) {\n    if (!privateMap.has(receiver)) throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n\n    return privateMap.get(receiver);\n}\nexport { _class_extract_field_descriptor as _ };\n","import { _ as _check_private_redeclaration } from \"./_check_private_redeclaration.js\";\n\nfunction _class_private_field_init(obj, privateMap, value) {\n    _check_private_redeclaration(obj, privateMap);\n    privateMap.set(obj, value);\n}\nexport { _class_private_field_init as _ };\n","function _check_private_redeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\nexport { _check_private_redeclaration as _ };\n","import { _ as _class_apply_descriptor_set } from \"./_class_apply_descriptor_set.js\";\nimport { _ as _class_extract_field_descriptor } from \"./_class_extract_field_descriptor.js\";\n\nfunction _class_private_field_set(receiver, privateMap, value) {\n    var descriptor = _class_extract_field_descriptor(receiver, privateMap, \"set\");\n    _class_apply_descriptor_set(receiver, descriptor, value);\n    return value;\n}\nexport { _class_private_field_set as _ };\n","function _class_apply_descriptor_set(receiver, descriptor, value) {\n    if (descriptor.set) descriptor.set.call(receiver, value);\n    else {\n        if (!descriptor.writable) {\n            // This should only throw in strict mode, but class bodies are\n            // always strict and private fields can only be used inside\n            // class bodies.\n            throw new TypeError(\"attempted to set read only private field\");\n        }\n        descriptor.value = value;\n    }\n}\nexport { _class_apply_descriptor_set as _ };\n","function _class_private_method_get(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) throw new TypeError(\"attempted to get private field on non-instance\");\n\n    return fn;\n}\nexport { _class_private_method_get as _ };\n","import { _ as _check_private_redeclaration } from \"./_check_private_redeclaration.js\";\n\nfunction _class_private_method_init(obj, privateSet) {\n    _check_private_redeclaration(obj, privateSet);\n    privateSet.add(obj);\n}\nexport { _class_private_method_init as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$753de3cb5925592a$export$71511d61b312f219","receiver","privateMap","action","has","TypeError","get","$2f97c2a4ea6269f4$export$71511d61b312f219","descriptor","call","value","$f86983e96b0c893e$export$71511d61b312f219","obj","privateCollection","$5d6c3530fa14a187$export$71511d61b312f219","set","$20d5c04b0c6865c9$export$71511d61b312f219","writable","$ac6739cbe5bf1c84$export$71511d61b312f219","privateSet","fn","$ea91727f98d0802f$export$71511d61b312f219","add","$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$3d28d7f1aac198f5$var$_gameStatus","WeakMap","$3d28d7f1aac198f5$var$_movingIndikator","$3d28d7f1aac198f5$var$_score","$3d28d7f1aac198f5$var$_getFlatEmptyIndexes","WeakSet","$3d28d7f1aac198f5$var$_chooseEmptyRandCoords","$3d28d7f1aac198f5$var$_setValue","$3d28d7f1aac198f5$var$_groupCells","$3d28d7f1aac198f5$var$_getColumn","$3d28d7f1aac198f5$var$_mergeForward","$3d28d7f1aac198f5$var$_mergeBackward","$3d28d7f1aac198f5$var$_isArraysEqual","$3d28d7f1aac198f5$var$_getMaxValue","$3d28d7f1aac198f5$var$_isMovePossible","$3d28d7f1aac198f5$var$_hasEqualPair","$3d28d7f1aac198f5$var$_updateStatus","$3d28d7f1aac198f5$var$getFlatEmptyIndexes","field","result","flat","forEach","item","ind","push","$3d28d7f1aac198f5$var$chooseEmptyRandCoords","emptyFlatIndexes","randInd","Math","floor","random","randItem","$3d28d7f1aac198f5$var$setValue","$3d28d7f1aac198f5$var$updateStatus","coords","randNum","$3d28d7f1aac198f5$var$groupCells","array","filter","$3d28d7f1aac198f5$var$getColumn","rowsArr","columnInd","column","$3d28d7f1aac198f5$var$mergeForward","concat","splice","j","reverse","$3d28d7f1aac198f5$var$mergeBackward","$3d28d7f1aac198f5$var$isArraysEqual","arr1","every","index","$3d28d7f1aac198f5$var$getMaxValue","_Math","max","apply","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","slice","constructor","name","test","$3d28d7f1aac198f5$var$isMovePossible","includes","row","$3d28d7f1aac198f5$var$hasEqualPair","some","initialState","state","$197cd56b15c33885$var$game","protoProps","Game","instance","Constructor","JSON","parse","stringify","key","curRow","currentMove","curColumn","$4fc75ccb937ab1df$var$_defineProperties","target","props","enumerable","configurable","defineProperty","$197cd56b15c33885$var$btnStart","document","querySelector","$197cd56b15c33885$var$scoreCell","$197cd56b15c33885$var$fieldCells","querySelectorAll","$197cd56b15c33885$var$getClassNumber","element","numbsArr","className","match","$197cd56b15c33885$var$showMessage","message","messages","curentMsg","classList","contains","remove","$197cd56b15c33885$var$render","fieldCell","flatStateValue","flatState","getState","innerHTML","String","getScore","getStatus","$197cd56b15c33885$var$keyPush","keyboardEvent","moveLeft","moveRight","moveUp","moveDown","addEventListener","removeEventListener","restart","start"],"version":3,"file":"index.bedc8422.js.map"}